package com.pd.base.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.pd.system.framework.PageToExample;

public class SeclevelExample extends PageToExample{
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table SECLEVEL
     *
     * @abatorgenerated Tue Jun 25 16:47:15 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table SECLEVEL
     *
     * @abatorgenerated Tue Jun 25 16:47:15 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SECLEVEL
     *
     * @abatorgenerated Tue Jun 25 16:47:15 CST 2013
     */
    public SeclevelExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SECLEVEL
     *
     * @abatorgenerated Tue Jun 25 16:47:15 CST 2013
     */
    protected SeclevelExample(SeclevelExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SECLEVEL
     *
     * @abatorgenerated Tue Jun 25 16:47:15 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SECLEVEL
     *
     * @abatorgenerated Tue Jun 25 16:47:15 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SECLEVEL
     *
     * @abatorgenerated Tue Jun 25 16:47:15 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SECLEVEL
     *
     * @abatorgenerated Tue Jun 25 16:47:15 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SECLEVEL
     *
     * @abatorgenerated Tue Jun 25 16:47:15 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SECLEVEL
     *
     * @abatorgenerated Tue Jun 25 16:47:15 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table SECLEVEL
     *
     * @abatorgenerated Tue Jun 25 16:47:15 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table SECLEVEL
     *
     * @abatorgenerated Tue Jun 25 16:47:15 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andLevelsIsNull() {
            addCriterion("LEVELS is null");
            return this;
        }

        public Criteria andLevelsIsNotNull() {
            addCriterion("LEVELS is not null");
            return this;
        }

        public Criteria andLevelsEqualTo(Long value) {
            addCriterion("LEVELS =", value, "levels");
            return this;
        }

        public Criteria andLevelsNotEqualTo(Long value) {
            addCriterion("LEVELS <>", value, "levels");
            return this;
        }

        public Criteria andLevelsGreaterThan(Long value) {
            addCriterion("LEVELS >", value, "levels");
            return this;
        }

        public Criteria andLevelsGreaterThanOrEqualTo(Long value) {
            addCriterion("LEVELS >=", value, "levels");
            return this;
        }

        public Criteria andLevelsLessThan(Long value) {
            addCriterion("LEVELS <", value, "levels");
            return this;
        }

        public Criteria andLevelsLessThanOrEqualTo(Long value) {
            addCriterion("LEVELS <=", value, "levels");
            return this;
        }

        public Criteria andLevelsIn(List values) {
            addCriterion("LEVELS in", values, "levels");
            return this;
        }

        public Criteria andLevelsNotIn(List values) {
            addCriterion("LEVELS not in", values, "levels");
            return this;
        }

        public Criteria andLevelsBetween(Long value1, Long value2) {
            addCriterion("LEVELS between", value1, value2, "levels");
            return this;
        }

        public Criteria andLevelsNotBetween(Long value1, Long value2) {
            addCriterion("LEVELS not between", value1, value2, "levels");
            return this;
        }

        public Criteria andCommentsIsNull() {
            addCriterion("COMMENTS is null");
            return this;
        }

        public Criteria andCommentsIsNotNull() {
            addCriterion("COMMENTS is not null");
            return this;
        }

        public Criteria andCommentsEqualTo(String value) {
            addCriterion("COMMENTS =", value, "comments");
            return this;
        }

        public Criteria andCommentsNotEqualTo(String value) {
            addCriterion("COMMENTS <>", value, "comments");
            return this;
        }

        public Criteria andCommentsGreaterThan(String value) {
            addCriterion("COMMENTS >", value, "comments");
            return this;
        }

        public Criteria andCommentsGreaterThanOrEqualTo(String value) {
            addCriterion("COMMENTS >=", value, "comments");
            return this;
        }

        public Criteria andCommentsLessThan(String value) {
            addCriterion("COMMENTS <", value, "comments");
            return this;
        }

        public Criteria andCommentsLessThanOrEqualTo(String value) {
            addCriterion("COMMENTS <=", value, "comments");
            return this;
        }

        public Criteria andCommentsLike(String value) {
            addCriterion("COMMENTS like", value, "comments");
            return this;
        }

        public Criteria andCommentsNotLike(String value) {
            addCriterion("COMMENTS not like", value, "comments");
            return this;
        }

        public Criteria andCommentsIn(List values) {
            addCriterion("COMMENTS in", values, "comments");
            return this;
        }

        public Criteria andCommentsNotIn(List values) {
            addCriterion("COMMENTS not in", values, "comments");
            return this;
        }

        public Criteria andCommentsBetween(String value1, String value2) {
            addCriterion("COMMENTS between", value1, value2, "comments");
            return this;
        }

        public Criteria andCommentsNotBetween(String value1, String value2) {
            addCriterion("COMMENTS not between", value1, value2, "comments");
            return this;
        }

        public Criteria andBzIsNull() {
            addCriterion("BZ is null");
            return this;
        }

        public Criteria andBzIsNotNull() {
            addCriterion("BZ is not null");
            return this;
        }

        public Criteria andBzEqualTo(String value) {
            addCriterion("BZ =", value, "bz");
            return this;
        }

        public Criteria andBzNotEqualTo(String value) {
            addCriterion("BZ <>", value, "bz");
            return this;
        }

        public Criteria andBzGreaterThan(String value) {
            addCriterion("BZ >", value, "bz");
            return this;
        }

        public Criteria andBzGreaterThanOrEqualTo(String value) {
            addCriterion("BZ >=", value, "bz");
            return this;
        }

        public Criteria andBzLessThan(String value) {
            addCriterion("BZ <", value, "bz");
            return this;
        }

        public Criteria andBzLessThanOrEqualTo(String value) {
            addCriterion("BZ <=", value, "bz");
            return this;
        }

        public Criteria andBzLike(String value) {
            addCriterion("BZ like", value, "bz");
            return this;
        }

        public Criteria andBzNotLike(String value) {
            addCriterion("BZ not like", value, "bz");
            return this;
        }

        public Criteria andBzIn(List values) {
            addCriterion("BZ in", values, "bz");
            return this;
        }

        public Criteria andBzNotIn(List values) {
            addCriterion("BZ not in", values, "bz");
            return this;
        }

        public Criteria andBzBetween(String value1, String value2) {
            addCriterion("BZ between", value1, value2, "bz");
            return this;
        }

        public Criteria andBzNotBetween(String value1, String value2) {
            addCriterion("BZ not between", value1, value2, "bz");
            return this;
        }

        public Criteria andF1IsNull() {
            addCriterion("F1 is null");
            return this;
        }

        public Criteria andF1IsNotNull() {
            addCriterion("F1 is not null");
            return this;
        }

        public Criteria andF1EqualTo(String value) {
            addCriterion("F1 =", value, "f1");
            return this;
        }

        public Criteria andF1NotEqualTo(String value) {
            addCriterion("F1 <>", value, "f1");
            return this;
        }

        public Criteria andF1GreaterThan(String value) {
            addCriterion("F1 >", value, "f1");
            return this;
        }

        public Criteria andF1GreaterThanOrEqualTo(String value) {
            addCriterion("F1 >=", value, "f1");
            return this;
        }

        public Criteria andF1LessThan(String value) {
            addCriterion("F1 <", value, "f1");
            return this;
        }

        public Criteria andF1LessThanOrEqualTo(String value) {
            addCriterion("F1 <=", value, "f1");
            return this;
        }

        public Criteria andF1Like(String value) {
            addCriterion("F1 like", value, "f1");
            return this;
        }

        public Criteria andF1NotLike(String value) {
            addCriterion("F1 not like", value, "f1");
            return this;
        }

        public Criteria andF1In(List values) {
            addCriterion("F1 in", values, "f1");
            return this;
        }

        public Criteria andF1NotIn(List values) {
            addCriterion("F1 not in", values, "f1");
            return this;
        }

        public Criteria andF1Between(String value1, String value2) {
            addCriterion("F1 between", value1, value2, "f1");
            return this;
        }

        public Criteria andF1NotBetween(String value1, String value2) {
            addCriterion("F1 not between", value1, value2, "f1");
            return this;
        }

        public Criteria andF2IsNull() {
            addCriterion("F2 is null");
            return this;
        }

        public Criteria andF2IsNotNull() {
            addCriterion("F2 is not null");
            return this;
        }

        public Criteria andF2EqualTo(String value) {
            addCriterion("F2 =", value, "f2");
            return this;
        }

        public Criteria andF2NotEqualTo(String value) {
            addCriterion("F2 <>", value, "f2");
            return this;
        }

        public Criteria andF2GreaterThan(String value) {
            addCriterion("F2 >", value, "f2");
            return this;
        }

        public Criteria andF2GreaterThanOrEqualTo(String value) {
            addCriterion("F2 >=", value, "f2");
            return this;
        }

        public Criteria andF2LessThan(String value) {
            addCriterion("F2 <", value, "f2");
            return this;
        }

        public Criteria andF2LessThanOrEqualTo(String value) {
            addCriterion("F2 <=", value, "f2");
            return this;
        }

        public Criteria andF2Like(String value) {
            addCriterion("F2 like", value, "f2");
            return this;
        }

        public Criteria andF2NotLike(String value) {
            addCriterion("F2 not like", value, "f2");
            return this;
        }

        public Criteria andF2In(List values) {
            addCriterion("F2 in", values, "f2");
            return this;
        }

        public Criteria andF2NotIn(List values) {
            addCriterion("F2 not in", values, "f2");
            return this;
        }

        public Criteria andF2Between(String value1, String value2) {
            addCriterion("F2 between", value1, value2, "f2");
            return this;
        }

        public Criteria andF2NotBetween(String value1, String value2) {
            addCriterion("F2 not between", value1, value2, "f2");
            return this;
        }

        public Criteria andF3IsNull() {
            addCriterion("F3 is null");
            return this;
        }

        public Criteria andF3IsNotNull() {
            addCriterion("F3 is not null");
            return this;
        }

        public Criteria andF3EqualTo(String value) {
            addCriterion("F3 =", value, "f3");
            return this;
        }

        public Criteria andF3NotEqualTo(String value) {
            addCriterion("F3 <>", value, "f3");
            return this;
        }

        public Criteria andF3GreaterThan(String value) {
            addCriterion("F3 >", value, "f3");
            return this;
        }

        public Criteria andF3GreaterThanOrEqualTo(String value) {
            addCriterion("F3 >=", value, "f3");
            return this;
        }

        public Criteria andF3LessThan(String value) {
            addCriterion("F3 <", value, "f3");
            return this;
        }

        public Criteria andF3LessThanOrEqualTo(String value) {
            addCriterion("F3 <=", value, "f3");
            return this;
        }

        public Criteria andF3Like(String value) {
            addCriterion("F3 like", value, "f3");
            return this;
        }

        public Criteria andF3NotLike(String value) {
            addCriterion("F3 not like", value, "f3");
            return this;
        }

        public Criteria andF3In(List values) {
            addCriterion("F3 in", values, "f3");
            return this;
        }

        public Criteria andF3NotIn(List values) {
            addCriterion("F3 not in", values, "f3");
            return this;
        }

        public Criteria andF3Between(String value1, String value2) {
            addCriterion("F3 between", value1, value2, "f3");
            return this;
        }

        public Criteria andF3NotBetween(String value1, String value2) {
            addCriterion("F3 not between", value1, value2, "f3");
            return this;
        }
    }
}