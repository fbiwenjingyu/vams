package com.pd.wjyw.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.pd.system.framework.PageToExample;

public class YcPaperExample extends PageToExample{

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table YC_PAPER
	 * @abatorgenerated  Fri Aug 01 14:05:08 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table YC_PAPER
	 * @abatorgenerated  Fri Aug 01 14:05:08 CST 2014
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_PAPER
	 * @abatorgenerated  Fri Aug 01 14:05:08 CST 2014
	 */
	public YcPaperExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_PAPER
	 * @abatorgenerated  Fri Aug 01 14:05:08 CST 2014
	 */
	protected YcPaperExample(YcPaperExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_PAPER
	 * @abatorgenerated  Fri Aug 01 14:05:08 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_PAPER
	 * @abatorgenerated  Fri Aug 01 14:05:08 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_PAPER
	 * @abatorgenerated  Fri Aug 01 14:05:08 CST 2014
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_PAPER
	 * @abatorgenerated  Fri Aug 01 14:05:08 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_PAPER
	 * @abatorgenerated  Fri Aug 01 14:05:08 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_PAPER
	 * @abatorgenerated  Fri Aug 01 14:05:08 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_PAPER
	 * @abatorgenerated  Fri Aug 01 14:05:08 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table YC_PAPER
	 * @abatorgenerated  Fri Aug 01 14:05:08 CST 2014
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("ID in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("ID not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return this;
		}

		public Criteria andTakecodeIsNull() {
			addCriterion("TAKECODE is null");
			return this;
		}

		public Criteria andTakecodeIsNotNull() {
			addCriterion("TAKECODE is not null");
			return this;
		}

		public Criteria andTakecodeEqualTo(String value) {
			addCriterion("TAKECODE =", value, "takecode");
			return this;
		}

		public Criteria andTakecodeNotEqualTo(String value) {
			addCriterion("TAKECODE <>", value, "takecode");
			return this;
		}

		public Criteria andTakecodeGreaterThan(String value) {
			addCriterion("TAKECODE >", value, "takecode");
			return this;
		}

		public Criteria andTakecodeGreaterThanOrEqualTo(String value) {
			addCriterion("TAKECODE >=", value, "takecode");
			return this;
		}

		public Criteria andTakecodeLessThan(String value) {
			addCriterion("TAKECODE <", value, "takecode");
			return this;
		}

		public Criteria andTakecodeLessThanOrEqualTo(String value) {
			addCriterion("TAKECODE <=", value, "takecode");
			return this;
		}

		public Criteria andTakecodeLike(String value) {
			addCriterion("TAKECODE like", value, "takecode");
			return this;
		}

		public Criteria andTakecodeNotLike(String value) {
			addCriterion("TAKECODE not like", value, "takecode");
			return this;
		}

		public Criteria andTakecodeIn(List values) {
			addCriterion("TAKECODE in", values, "takecode");
			return this;
		}

		public Criteria andTakecodeNotIn(List values) {
			addCriterion("TAKECODE not in", values, "takecode");
			return this;
		}

		public Criteria andTakecodeBetween(String value1, String value2) {
			addCriterion("TAKECODE between", value1, value2, "takecode");
			return this;
		}

		public Criteria andTakecodeNotBetween(String value1, String value2) {
			addCriterion("TAKECODE not between", value1, value2, "takecode");
			return this;
		}

		public Criteria andTakeNameIsNull() {
			addCriterion("TAKE_NAME is null");
			return this;
		}

		public Criteria andTakeNameIsNotNull() {
			addCriterion("TAKE_NAME is not null");
			return this;
		}

		public Criteria andTakeNameEqualTo(String value) {
			addCriterion("TAKE_NAME =", value, "takeName");
			return this;
		}

		public Criteria andTakeNameNotEqualTo(String value) {
			addCriterion("TAKE_NAME <>", value, "takeName");
			return this;
		}

		public Criteria andTakeNameGreaterThan(String value) {
			addCriterion("TAKE_NAME >", value, "takeName");
			return this;
		}

		public Criteria andTakeNameGreaterThanOrEqualTo(String value) {
			addCriterion("TAKE_NAME >=", value, "takeName");
			return this;
		}

		public Criteria andTakeNameLessThan(String value) {
			addCriterion("TAKE_NAME <", value, "takeName");
			return this;
		}

		public Criteria andTakeNameLessThanOrEqualTo(String value) {
			addCriterion("TAKE_NAME <=", value, "takeName");
			return this;
		}

		public Criteria andTakeNameLike(String value) {
			addCriterion("TAKE_NAME like", value, "takeName");
			return this;
		}

		public Criteria andTakeNameNotLike(String value) {
			addCriterion("TAKE_NAME not like", value, "takeName");
			return this;
		}

		public Criteria andTakeNameIn(List values) {
			addCriterion("TAKE_NAME in", values, "takeName");
			return this;
		}

		public Criteria andTakeNameNotIn(List values) {
			addCriterion("TAKE_NAME not in", values, "takeName");
			return this;
		}

		public Criteria andTakeNameBetween(String value1, String value2) {
			addCriterion("TAKE_NAME between", value1, value2, "takeName");
			return this;
		}

		public Criteria andTakeNameNotBetween(String value1, String value2) {
			addCriterion("TAKE_NAME not between", value1, value2, "takeName");
			return this;
		}

		public Criteria andDescriptionIsNull() {
			addCriterion("DESCRIPTION is null");
			return this;
		}

		public Criteria andDescriptionIsNotNull() {
			addCriterion("DESCRIPTION is not null");
			return this;
		}

		public Criteria andDescriptionEqualTo(String value) {
			addCriterion("DESCRIPTION =", value, "description");
			return this;
		}

		public Criteria andDescriptionNotEqualTo(String value) {
			addCriterion("DESCRIPTION <>", value, "description");
			return this;
		}

		public Criteria andDescriptionGreaterThan(String value) {
			addCriterion("DESCRIPTION >", value, "description");
			return this;
		}

		public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("DESCRIPTION >=", value, "description");
			return this;
		}

		public Criteria andDescriptionLessThan(String value) {
			addCriterion("DESCRIPTION <", value, "description");
			return this;
		}

		public Criteria andDescriptionLessThanOrEqualTo(String value) {
			addCriterion("DESCRIPTION <=", value, "description");
			return this;
		}

		public Criteria andDescriptionLike(String value) {
			addCriterion("DESCRIPTION like", value, "description");
			return this;
		}

		public Criteria andDescriptionNotLike(String value) {
			addCriterion("DESCRIPTION not like", value, "description");
			return this;
		}

		public Criteria andDescriptionIn(List values) {
			addCriterion("DESCRIPTION in", values, "description");
			return this;
		}

		public Criteria andDescriptionNotIn(List values) {
			addCriterion("DESCRIPTION not in", values, "description");
			return this;
		}

		public Criteria andDescriptionBetween(String value1, String value2) {
			addCriterion("DESCRIPTION between", value1, value2, "description");
			return this;
		}

		public Criteria andDescriptionNotBetween(String value1, String value2) {
			addCriterion("DESCRIPTION not between", value1, value2,
					"description");
			return this;
		}

		public Criteria andTakeTypeIsNull() {
			addCriterion("TAKE_TYPE is null");
			return this;
		}

		public Criteria andTakeTypeIsNotNull() {
			addCriterion("TAKE_TYPE is not null");
			return this;
		}

		public Criteria andTakeTypeEqualTo(String value) {
			addCriterion("TAKE_TYPE =", value, "takeType");
			return this;
		}

		public Criteria andTakeTypeNotEqualTo(String value) {
			addCriterion("TAKE_TYPE <>", value, "takeType");
			return this;
		}

		public Criteria andTakeTypeGreaterThan(String value) {
			addCriterion("TAKE_TYPE >", value, "takeType");
			return this;
		}

		public Criteria andTakeTypeGreaterThanOrEqualTo(String value) {
			addCriterion("TAKE_TYPE >=", value, "takeType");
			return this;
		}

		public Criteria andTakeTypeLessThan(String value) {
			addCriterion("TAKE_TYPE <", value, "takeType");
			return this;
		}

		public Criteria andTakeTypeLessThanOrEqualTo(String value) {
			addCriterion("TAKE_TYPE <=", value, "takeType");
			return this;
		}

		public Criteria andTakeTypeLike(String value) {
			addCriterion("TAKE_TYPE like", value, "takeType");
			return this;
		}

		public Criteria andTakeTypeNotLike(String value) {
			addCriterion("TAKE_TYPE not like", value, "takeType");
			return this;
		}

		public Criteria andTakeTypeIn(List values) {
			addCriterion("TAKE_TYPE in", values, "takeType");
			return this;
		}

		public Criteria andTakeTypeNotIn(List values) {
			addCriterion("TAKE_TYPE not in", values, "takeType");
			return this;
		}

		public Criteria andTakeTypeBetween(String value1, String value2) {
			addCriterion("TAKE_TYPE between", value1, value2, "takeType");
			return this;
		}

		public Criteria andTakeTypeNotBetween(String value1, String value2) {
			addCriterion("TAKE_TYPE not between", value1, value2, "takeType");
			return this;
		}

		public Criteria andBzIsNull() {
			addCriterion("BZ is null");
			return this;
		}

		public Criteria andBzIsNotNull() {
			addCriterion("BZ is not null");
			return this;
		}

		public Criteria andBzEqualTo(String value) {
			addCriterion("BZ =", value, "bz");
			return this;
		}

		public Criteria andBzNotEqualTo(String value) {
			addCriterion("BZ <>", value, "bz");
			return this;
		}

		public Criteria andBzGreaterThan(String value) {
			addCriterion("BZ >", value, "bz");
			return this;
		}

		public Criteria andBzGreaterThanOrEqualTo(String value) {
			addCriterion("BZ >=", value, "bz");
			return this;
		}

		public Criteria andBzLessThan(String value) {
			addCriterion("BZ <", value, "bz");
			return this;
		}

		public Criteria andBzLessThanOrEqualTo(String value) {
			addCriterion("BZ <=", value, "bz");
			return this;
		}

		public Criteria andBzLike(String value) {
			addCriterion("BZ like", value, "bz");
			return this;
		}

		public Criteria andBzNotLike(String value) {
			addCriterion("BZ not like", value, "bz");
			return this;
		}

		public Criteria andBzIn(List values) {
			addCriterion("BZ in", values, "bz");
			return this;
		}

		public Criteria andBzNotIn(List values) {
			addCriterion("BZ not in", values, "bz");
			return this;
		}

		public Criteria andBzBetween(String value1, String value2) {
			addCriterion("BZ between", value1, value2, "bz");
			return this;
		}

		public Criteria andBzNotBetween(String value1, String value2) {
			addCriterion("BZ not between", value1, value2, "bz");
			return this;
		}
	}
}