package com.pd.wjyw.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.pd.system.framework.PageToExample;

public class YcTypePaperExample extends PageToExample{

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table YC_TYPE_PAPER
	 * @abatorgenerated  Tue Aug 05 10:19:49 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table YC_TYPE_PAPER
	 * @abatorgenerated  Tue Aug 05 10:19:49 CST 2014
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_TYPE_PAPER
	 * @abatorgenerated  Tue Aug 05 10:19:49 CST 2014
	 */
	public YcTypePaperExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_TYPE_PAPER
	 * @abatorgenerated  Tue Aug 05 10:19:49 CST 2014
	 */
	protected YcTypePaperExample(YcTypePaperExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_TYPE_PAPER
	 * @abatorgenerated  Tue Aug 05 10:19:49 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_TYPE_PAPER
	 * @abatorgenerated  Tue Aug 05 10:19:49 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_TYPE_PAPER
	 * @abatorgenerated  Tue Aug 05 10:19:49 CST 2014
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_TYPE_PAPER
	 * @abatorgenerated  Tue Aug 05 10:19:49 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_TYPE_PAPER
	 * @abatorgenerated  Tue Aug 05 10:19:49 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_TYPE_PAPER
	 * @abatorgenerated  Tue Aug 05 10:19:49 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table YC_TYPE_PAPER
	 * @abatorgenerated  Tue Aug 05 10:19:49 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table YC_TYPE_PAPER
	 * @abatorgenerated  Tue Aug 05 10:19:49 CST 2014
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("ID in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("ID not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return this;
		}

		public Criteria andHpzlIsNull() {
			addCriterion("HPZL is null");
			return this;
		}

		public Criteria andHpzlIsNotNull() {
			addCriterion("HPZL is not null");
			return this;
		}

		public Criteria andHpzlEqualTo(String value) {
			addCriterion("HPZL =", value, "hpzl");
			return this;
		}

		public Criteria andHpzlNotEqualTo(String value) {
			addCriterion("HPZL <>", value, "hpzl");
			return this;
		}

		public Criteria andHpzlGreaterThan(String value) {
			addCriterion("HPZL >", value, "hpzl");
			return this;
		}

		public Criteria andHpzlGreaterThanOrEqualTo(String value) {
			addCriterion("HPZL >=", value, "hpzl");
			return this;
		}

		public Criteria andHpzlLessThan(String value) {
			addCriterion("HPZL <", value, "hpzl");
			return this;
		}

		public Criteria andHpzlLessThanOrEqualTo(String value) {
			addCriterion("HPZL <=", value, "hpzl");
			return this;
		}

		public Criteria andHpzlLike(String value) {
			addCriterion("HPZL like", value, "hpzl");
			return this;
		}

		public Criteria andHpzlNotLike(String value) {
			addCriterion("HPZL not like", value, "hpzl");
			return this;
		}

		public Criteria andHpzlIn(List values) {
			addCriterion("HPZL in", values, "hpzl");
			return this;
		}

		public Criteria andHpzlNotIn(List values) {
			addCriterion("HPZL not in", values, "hpzl");
			return this;
		}

		public Criteria andHpzlBetween(String value1, String value2) {
			addCriterion("HPZL between", value1, value2, "hpzl");
			return this;
		}

		public Criteria andHpzlNotBetween(String value1, String value2) {
			addCriterion("HPZL not between", value1, value2, "hpzl");
			return this;
		}

		public Criteria andTakecodeIsNull() {
			addCriterion("TAKECODE is null");
			return this;
		}

		public Criteria andTakecodeIsNotNull() {
			addCriterion("TAKECODE is not null");
			return this;
		}

		public Criteria andTakecodeEqualTo(String value) {
			addCriterion("TAKECODE =", value, "takecode");
			return this;
		}

		public Criteria andTakecodeNotEqualTo(String value) {
			addCriterion("TAKECODE <>", value, "takecode");
			return this;
		}

		public Criteria andTakecodeGreaterThan(String value) {
			addCriterion("TAKECODE >", value, "takecode");
			return this;
		}

		public Criteria andTakecodeGreaterThanOrEqualTo(String value) {
			addCriterion("TAKECODE >=", value, "takecode");
			return this;
		}

		public Criteria andTakecodeLessThan(String value) {
			addCriterion("TAKECODE <", value, "takecode");
			return this;
		}

		public Criteria andTakecodeLessThanOrEqualTo(String value) {
			addCriterion("TAKECODE <=", value, "takecode");
			return this;
		}

		public Criteria andTakecodeLike(String value) {
			addCriterion("TAKECODE like", value, "takecode");
			return this;
		}

		public Criteria andTakecodeNotLike(String value) {
			addCriterion("TAKECODE not like", value, "takecode");
			return this;
		}

		public Criteria andTakecodeIn(List values) {
			addCriterion("TAKECODE in", values, "takecode");
			return this;
		}

		public Criteria andTakecodeNotIn(List values) {
			addCriterion("TAKECODE not in", values, "takecode");
			return this;
		}

		public Criteria andTakecodeBetween(String value1, String value2) {
			addCriterion("TAKECODE between", value1, value2, "takecode");
			return this;
		}

		public Criteria andTakecodeNotBetween(String value1, String value2) {
			addCriterion("TAKECODE not between", value1, value2, "takecode");
			return this;
		}

		public Criteria andCodeIsNull() {
			addCriterion("CODE is null");
			return this;
		}

		public Criteria andCodeIsNotNull() {
			addCriterion("CODE is not null");
			return this;
		}

		public Criteria andCodeEqualTo(String value) {
			addCriterion("CODE =", value, "code");
			return this;
		}

		public Criteria andCodeNotEqualTo(String value) {
			addCriterion("CODE <>", value, "code");
			return this;
		}

		public Criteria andCodeGreaterThan(String value) {
			addCriterion("CODE >", value, "code");
			return this;
		}

		public Criteria andCodeGreaterThanOrEqualTo(String value) {
			addCriterion("CODE >=", value, "code");
			return this;
		}

		public Criteria andCodeLessThan(String value) {
			addCriterion("CODE <", value, "code");
			return this;
		}

		public Criteria andCodeLessThanOrEqualTo(String value) {
			addCriterion("CODE <=", value, "code");
			return this;
		}

		public Criteria andCodeLike(String value) {
			addCriterion("CODE like", value, "code");
			return this;
		}

		public Criteria andCodeNotLike(String value) {
			addCriterion("CODE not like", value, "code");
			return this;
		}

		public Criteria andCodeIn(List values) {
			addCriterion("CODE in", values, "code");
			return this;
		}

		public Criteria andCodeNotIn(List values) {
			addCriterion("CODE not in", values, "code");
			return this;
		}

		public Criteria andCodeBetween(String value1, String value2) {
			addCriterion("CODE between", value1, value2, "code");
			return this;
		}

		public Criteria andCodeNotBetween(String value1, String value2) {
			addCriterion("CODE not between", value1, value2, "code");
			return this;
		}

		public Criteria andYwlxIsNull() {
			addCriterion("YWLX is null");
			return this;
		}

		public Criteria andYwlxIsNotNull() {
			addCriterion("YWLX is not null");
			return this;
		}

		public Criteria andYwlxEqualTo(String value) {
			addCriterion("YWLX =", value, "ywlx");
			return this;
		}

		public Criteria andYwlxNotEqualTo(String value) {
			addCriterion("YWLX <>", value, "ywlx");
			return this;
		}

		public Criteria andYwlxGreaterThan(String value) {
			addCriterion("YWLX >", value, "ywlx");
			return this;
		}

		public Criteria andYwlxGreaterThanOrEqualTo(String value) {
			addCriterion("YWLX >=", value, "ywlx");
			return this;
		}

		public Criteria andYwlxLessThan(String value) {
			addCriterion("YWLX <", value, "ywlx");
			return this;
		}

		public Criteria andYwlxLessThanOrEqualTo(String value) {
			addCriterion("YWLX <=", value, "ywlx");
			return this;
		}

		public Criteria andYwlxLike(String value) {
			addCriterion("YWLX like", value, "ywlx");
			return this;
		}

		public Criteria andYwlxNotLike(String value) {
			addCriterion("YWLX not like", value, "ywlx");
			return this;
		}

		public Criteria andYwlxIn(List values) {
			addCriterion("YWLX in", values, "ywlx");
			return this;
		}

		public Criteria andYwlxNotIn(List values) {
			addCriterion("YWLX not in", values, "ywlx");
			return this;
		}

		public Criteria andYwlxBetween(String value1, String value2) {
			addCriterion("YWLX between", value1, value2, "ywlx");
			return this;
		}

		public Criteria andYwlxNotBetween(String value1, String value2) {
			addCriterion("YWLX not between", value1, value2, "ywlx");
			return this;
		}
	}
}